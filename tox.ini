[tox]
envlist = py38,coverage,check

[testenv]
description = Run tests with coverage in {envname}
deps =
    pytest
    pytest-recording
    {[testenv:coverage]deps}
setenv =
    # Use a unique data file to enable parallel runs
    # Also supports combining in [testenv:coverage]
    COVERAGE_FILE = .coverage.{envname}
commands =
    coverage run -m pytest {posargs:tests}

[testenv:coverage]
# See related config and explanation in .coveragerc
description = Combine coverage data and generate reports
basepython = python3.8
skip_install = True
depends = py38
setenv =
    COVERAGE_FILE = .coverage
deps =
    coverage
commands =
    # Assuming failure means we've already combined .coverage.*
    -coverage combine
    coverage report

[testenv:check]
description = Run formatters & linters on all files
skip_install = True
basepython = python3.8
deps =
    mypy
    black
    flake8
    # Released versions don't support the walrus operator
    git+https://github.com/PyCQA/pyflakes#egg=pyflakes
    git+https://gitlab.com/PyCQA/pycodestyle#egg=pycodestyle
    flake8-import-order
    flake8-docstrings
ignore_errors = true
commands =
    mypy src
    black --check .
    flake8 src tests

[testenv:venv]
description = Create a virtual environment for development
envdir = {toxinidir}/venv
basepython = python3.8
usedevelop = True
deps =
    {[testenv]deps}
    {[testenv:check]deps}
commands =
